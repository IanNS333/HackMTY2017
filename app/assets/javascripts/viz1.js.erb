var window.simulation;
var window.spritesUser;
var window.spriteObstacle;
var window.spriteFlag;

var window.generationsTotal;
var window.agentTotal;
var window.genotypeLength;
var window.obstacles;//info

var window.startCoord;
var window.endCoord;

var window.sumA;
var window.sumB;

var window.currentGeneration;
var window.currentGenotypeIndex;

var window.wait;
var window.waitLimit;

function window.preload(){
  game.load.image('user1',"<%= asset_path('arrowArrow.png')%>");//user1
  game.load.image('user2',"<%= asset_path('blueArrow.png')%>");//user2
  game.load.image('flag',"<%= asset_path('checkeredFlag.png')%>");//final
  game.load.image('obst',"<%= asset_path('block.png')%>");//obstacle
}

function create(){
  game.physics.startSystem(Phaser.Physics.ARCADE);  //NECESSARY... I THINK...

  var j=''
  window.simulation==JSON.parse(j);
  window.currentGenotypeIndex=1;
  window.currentGeneration=0;
  window.wait=0;
  window.waitLimit=5;
  window.generationsTotal=window.simulation.Player1.length;
  window.agentTotal=window.simulation.Player1[0].length;
  window.genotypeLength=window.simulation.Player1[0][0].length;
  window.obstacles=window.simulation.obstacles;
  window.startCoord=window.simulation.board.start;
  window.endCoord=window.simulation.board.end;

  createSprites();
}

function createSprites(){
  window.spritesUser=new Array();
  window.sumA=new Array();
  window.sumB=new Array();
  for(var i=0;i<window.agentTotal;i++){
    window.spritesUser[0][i]=game.add.sprite(window.startCoord[0],window.startCoord[1],'user1');
    window.spritesUser[1][i]=game.add.sprite(window.startCoord[0],window.startCoord[1],'user2');
    window.sumA[i]=window.simulation.Player1[window.currentGeneration][i][0];
    window.sumB[i]=window.simulation.Player2[window.currentGeneration][i][0];
  }
  window.spriteFlag=game.add.sprite(window.endCoord[0],window.endCoord[1],'flag');
  window.spriteObstacle=new Array();
  window.obstacles.foreach(function(coords,key){
    window.spriteObstacle[key]=game.add.sprite(coords[0],coords[1],'obst');
  });
}

function update(){
  game.physics.arcade.overlap(bullets, aliens, collisionHandler, null, this);
  if(wait<waitLimit){
    wait++;
  }else{
    updateUtil();
    wait=0;
  }
}

function updateUtil(){
  if(window.currentGenotypeIndex<window.genotypeLength){
    var next;
    for(var i=0;i<window.agentTotal;i++){
      next=calculate(0,i);
      window.spritesUser[0][i].x+=next[0];
      window.spritesUser[0][i].y+=next[1];
      next=calculate(1,i);
      window.spritesUser[1][i].x+=next[0];
      window.spritesUser[1][i].y+=next[1];
      window.currentGenotypeIndex++;
    }
  }else if(window.currentGenotypeIndex>window.genotypeLength && window.currentgen<window.generationsTotal-1){
    window.currentGeneration++;
    window.currentGenotypeIndex=1;
    //reset sums
    for(var i=0;i<window.agentTotal;i++){
      window.sumA[i]=window.simulation.Player1[window.currentGeneration][i][0];
      window.sumB[i]=window.simulation.Player2[window.currentGeneration][i][0];
    }
    //set x,y sprites to start
    for(var i=0;i<window.agentTotal;i++){
      window.spritesUser[0][i].x=window.startCoord[0];
      window.spritesUser[0][i].y=window.startCoord[1];
      window.spritesUser[1][i].x=window.startCoord[0];
      window.spritesUser[1][i].y=window.startCoord[1];
    }
  }
}

function calculate(var player,var a){
  var agent;
  if(player==0){
    agent=window.simulation.player1[window.currentGeneration][a];
    if(agent[window.currentGenotypeIndex]==2){
      sumA[a]++;
      if(sumA[a]>7){
        sumA[a]=0;
      }
    }else if(agent[window.currentGenotypeIndex]==0){
      sumA[a]--;
      if(sumA[a]<0){
        sumA[a]=7;
      }
    }
    bigSwitch(sumA[a]);
  }else{
    agent=window.simulation.player2[window.currentGeneration][a];
    if(agent[window.currentGenotypeIndex]==2){
      sumB[a]++;
      if(sumA[a]>7){
        sumA[a]=0;
      }
    }else if(agent[window.currentGenotypeIndex]==0){
      sumB[a]--;
      if(sumA[a]<0){
        sumA[a]=7;
      }
    }
  }
    bigSwitch(sumB[a]);
}

function bigSwitch(var a){
  var toRet=[0,0];
  if(a==0){
    return toRet=[20,0];
  }else if(a==1){
    return toRet=[20,-20];
  }else if(a==2){
    return toRet=[0,-20];
  }else if(a==3){
    return toRet=[-20,-20];
  }else if(a==4){
    return toRet=[-20,0]
  }else if(a==5){
    return toRet=[-20,20];
  }else if(a==6){
    return toRet=[0,20]
  }else if(a==7){
    return toRet=[20,20];
  }
}

function render(){
  game.debug.text('Generation '+(currentgen+1), 32, 32);
}
