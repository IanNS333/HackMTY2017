window.simulation;
window.spritesUser;
window.spriteObstacle;
window.spriteFlag;

window.generationsTotal;
window.agentTotal;
window.genotypeLength;
window.obstacles;//info

window.startCoord;
window.endCoord;

window.sumA;
window.sumB;

window.scaleVertical=18;//window.game.height;
window.scaleHorizontal=18;//window.game.width;

window.currentGeneration;
window.currentGenotypeIndex;

window.wait;
window.waitLimit;
window.j;

window.a;
window.o;
window.f;

function preload(){
  window.game.load.image('user1',"<%= asset_path('redArrow.png')%>");//user1
  window.game.load.image('user2',"<%= asset_path('blueArrow.png')%>");//user2
  window.game.load.image('flag',"<%= asset_path('blueArrow.png')%>");//final
  window.game.load.image('obst',"<%= asset_path('block.png')%>");//obstacle
}

function create(){
  window.game.physics.startSystem(Phaser.Physics.ARCADE);  //NECESSARY... I THINK...

  // window.a=game.add.group();
  // window.a.enableBody=true;
  // window.a.physicsBodyType = Phaser.Physics.ARCADE;
  // window.a.events.onOutOfBounds.add();
  //
  // window.o= game.add.group();
  // window.o.enableBody=true;
  // window.o.physicsBodyType = Phaser.Physics.ARCADE;
  //
  // window.f= game.add.group();
  // window.f.enableBody=true;
  // window.f.physicsBodyType = Phaser.Physics.ARCADE;

  window.simulation=JSON.parse(JSON.parse(window.j));
  window.currentGenotypeIndex=1;
  window.currentGeneration=0;
  window.wait=0;
  window.waitLimit=5;
  window.generationsTotal=window.simulation.player1.length;
  window.agentTotal=window.simulation.player1[0].length;
  console.log(window.agentTotal);
  window.genotypeLength=window.simulation.player1[0][0].length;
  window.obstacles=window.simulation.board.obstacles;
  window.obstaclesScaled = window.obstacles;
  window.startCoord=window.simulation.board.start;
  window.endCoord=window.simulation.board.end;
  console.log(window.genotypeLength);

  createSprites();
}

function createSprites(){
  window.spritesUser=new Array();
  window.sumA=new Array();
  window.sumB=new Array();
  window.spritesUser[0] = new Array();
  window.spritesUser[1] = new Array();
  for(var i=0;i<window.agentTotal;i++){
    window.spritesUser[0][i]=window.game.add.sprite(window.startCoord[1],window.startCoord[0],'user1');
    window.spritesUser[1][i]=window.game.add.sprite(window.startCoord[1],window.startCoord[0],'user2');
    window.sumA[i]=window.simulation.player1[window.currentGeneration][i][0];
    window.sumB[i]=window.simulation.player2[window.currentGeneration][i][0];
  }
  window.spriteFlag=window.game.add.sprite(window.endCoord[1]*window.scaleHorizontal,window.endCoord[0]*window.scaleVertical,'flag');
  window.spriteObstacle=new Array();
  window.obstacles.forEach(function(coords,key){
    window.spriteObstacle[key]=window.game.add.sprite(coords[1]*window.scaleHorizontal,coords[0]*window.scaleVertical,'obst');
    window.obstaclesScaled[key]=[coords[1]*window.scaleHorizontal, coords[0]*window.scaleVertical]
  });
}

function update(){
  // window.game.physics.arcade.overlap(bullets, aliens, collisionHandler, null, this);
  if(wait<waitLimit){
    wait++;
  }else{
    updateUtil();
    wait=0;
  }
}

function inside(coords){
  for(var i  = 0; i < window.obstaclesScaled.length; i++){
    if( Math.abs(coords[1]-obstaclesScaled[i][1])<18 && Math.abs(coords[0] - obstaclesScaled[i][0])<18){
      console.log("crashed");
      return true;
    }
    //console.log(obstaclesScaled[i]);
    //console.log(coords[1]);
  }

  if(coords[0]<0||coords[1]<0) return true;
  if(coords[0]>900||coords[1]>430) return true;

  return false;
}

function updateUtil(){

  if(window.currentGenotypeIndex<window.genotypeLength){
    var next;
    var pos = [0, 0];
    // for(var j=0;i<)
    for(var i=0;i<window.agentTotal;i++){
      next=calculate(0,i);
      pos = [(window.spritesUser[0][i].x+next[0]), (window.spritesUser[0][i].y+next[1])]
      window.spritesUser[0][i].x+= inside(pos) ? 0 : next[0];
      window.spritesUser[0][i].y+= inside(pos) ? 0 : next[1];
      next=calculate(1,i);

      pos = [(window.spritesUser[1][i].x+next[0]), (window.spritesUser[1][i].y+next[1])]
      window.spritesUser[1][i].x+= inside(pos) ? 0 : next[0];
      window.spritesUser[1][i].y+= inside(pos) ? 0 : next[1];
    }
    window.currentGenotypeIndex++;
  }else if(window.currentGenotypeIndex>=window.genotypeLength && window.currentGeneration<window.generationsTotal-1){
    window.currentGeneration++;
    console.log(window.currentGenotypeIndex);
    window.currentGenotypeIndex=1;
    //reset sums
    for(var i=0;i<window.agentTotal;i++){
      window.sumA[i]=window.simulation.player1[window.currentGeneration][i][0];
      window.sumB[i]=window.simulation.player2[window.currentGeneration][i][0];
    }
    //set x,y sprites to start
    for(var i=0;i<window.agentTotal;i++){
      window.spritesUser[0][i].x=window.startCoord[0];
      window.spritesUser[0][i].y=window.startCoord[1];
      window.spritesUser[1][i].x=window.startCoord[0];
      window.spritesUser[1][i].y=window.startCoord[1];
    }
  }else{
    console.log('fuck');
  }
}

function calculate(player, a){
  var agent;
  if(player==0){
    agent=window.simulation.player1[window.currentGeneration][a];
    if(agent[window.currentGenotypeIndex]==2){
      sumA[a]++;
      if(sumA[a]>7){
        sumA[a]=0;
      }
    }else if(agent[window.currentGenotypeIndex]==0){
      sumA[a]--;
      if(sumA[a]<0){
        sumA[a]=7;
      }
    }
    return bigSwitch(sumA[a]);
  }else{
    agent=window.simulation.player2[window.currentGeneration][a];
    if(agent[window.currentGenotypeIndex]==2){
      sumB[a]++;
      if(sumB[a]>7){
        sumB[a]=0;
      }
    }else if(agent[window.currentGenotypeIndex]==0){
      sumB[a]--;
      if(sumB[a]<0){
        sumB[a]=7;
      }
    }
  }
  return bigSwitch(sumB[a]);
}

function bigSwitch(a){
  var toRet=[0,0];
  if(a==0){
    toRet=[window.scaleHorizontal,0];
  }else if(a==1){
    toRet=[window.scaleHorizontal,-window.scaleVertical];
  }else if(a==2){
    toRet=[0,-window.scaleVertical];
  }else if(a==3){
    toRet=[-window.scaleHorizontal,-window.scaleVertical];
  }else if(a==4){
    toRet=[-window.scaleHorizontal,0]
  }else if(a==5){
    toRet=[-window.scaleHorizontal,window.scaleVertical];
  }else if(a==6){
    toRet=[0,window.scaleVertical]
  }else if(a==7){
    toRet=[window.scaleHorizontal,window.scaleVertical];
  }
  return toRet;
}

function render(){
  window.game.debug.text('Generation '+(window.currentGeneration+1), 32, 32);
}
